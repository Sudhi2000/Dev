name: CI/CD with QA Approval

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build-status: ${{ steps.build_status.outcome }}
      commit-message: ${{ steps.commit_message.outputs.message }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build Angular project
        id: build_status
        run: npm run build --prod

      - name: Get commit message
        id: commit_message
        run: |
          echo "message=$(git log -1 --pretty=format:'%s')" >> "$GITHUB_OUTPUT"

  notify_dev_on_failure:
    needs: build
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify developer on build failure
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": ":x: *Build Failed!*\n*Developer:* `${{ github.actor }}`\n*Commit:* `${{ needs.build.outputs.commit-message }}`\n➡️ [View Build Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEV }}

  notify_qa:
    needs: build
    if: ${{ needs.build.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Notify QA via Slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": ":rocket: *Build Passed!*\n*Developer:* `${{ github.actor }}`\n*Commit:* `${{ needs.build.outputs.commit-message }}`\n\n:clipboard: QA approval needed before deployment.\n➡️ [Click to review and approve](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_QA }}

  deploy:
    needs: notify_qa
    runs-on: ubuntu-latest
    environment:
      name: qa-approval
      url: https://your-qa-instance.com
    steps:
      - name: Deploy to QA server
        run: |
          echo "Deploying to QA instance..."
          # Your actual deployment logic goes here
